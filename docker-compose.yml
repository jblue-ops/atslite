version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - .:/rails
      - bundle_cache:/usr/local/bundle
      - node_modules:/rails/node_modules
      - rails_cache:/rails/tmp/cache
    environment:
      - RAILS_ENV=development
      - DATABASE_URL=postgresql://atslite:password@db:5432/atslite_development
      - REDIS_URL=redis://redis:6379/0
      - BOOTSNAP_CACHE_DIR=/tmp/cache
    depends_on:
      - db
      - redis
    stdin_open: true
    tty: true
    command: bin/dev

  db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=atslite
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=atslite_development
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U atslite -d atslite_development"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  sidekiq:
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - .:/rails
      - bundle_cache:/usr/local/bundle
    environment:
      - RAILS_ENV=development
      - DATABASE_URL=postgresql://atslite:password@db:5432/atslite_development
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    command: bundle exec sidekiq

volumes:
  postgres_data:
  redis_data:
  bundle_cache:
  node_modules:
  rails_cache: